#
# See the Configure script for a description of the syntax of this file.
#

mainmenu_name "Linux ELKS Kernel Configuration"
comment 'Just accept the defaults unless you know what you are doing'

mainmenu_option next_comment
    comment 'Advanced - for Developers and Hackers only'

    bool 'Include development code/drivers'	CONFIG_EXPERIMENTAL	n
    bool 'Modular kernel (NOT IMPLEMENTED)'	CONFIG_MODULES		n
endmenu

mainmenu_option next_comment
    comment 'Architecture'

    choice 'Select system architecture'		\
	"Auto		CONFIG_ARCH_AUTO	\
	 IBM-PC 	CONFIG_ARCH_IBMPC	\
	 SIBO		CONFIG_ARCH_SIBO"		Auto

    if [ "$CONFIG_ARCH_SIBO" != "y" ]; then
	choice 'Select PC system architecture'	\
	    "Auto	CONFIG_PC_AUTO		\
	     PC/XT	CONFIG_PC_XT		\
	     PC/AT	CONFIG_PC_AT		\
	     MCA	CONFIG_PC_MCA"			Auto

	bool 'Build kernel as ROM-bootable'		CONFIG_ROMCODE	n
    else
	define_bool CONFIG_ROMCODE n
    fi

    bool 'Minimize kernel size'			CONFIG_SMALL_KERNEL	n
endmenu

if [ "$CONFIG_ARCH_IBMPC" = "y" ]; then
    mainmenu_option next_comment
	comment 'Model-specific features'

	choice 'Model of computer'		\
	    "TrueClone	CONFIG_IBMPC_CLONE	\
	     Compaq	CONFIG_IBMPC_COMPAQ"		TrueClone
	if [ "$CONFIG_IBMPC_COMPAQ" = "y" ]; then
	    bool 'Switch Compaq DeskPro to fast mode'	CONFIG_COMPAQ_FAST  n
	fi
	bool 'Mount root partition read-only by default' CONFIG_ROOT_READONLY n
    endmenu
fi

mainmenu_option next_comment
    comment 'Memory manager'
  	
    bool 'Advanced memory manager'			CONFIG_ADVANCED_MM	y
	
    if [ "$CONFIG_ADVANCED_MM" = "y" ]; then
	     bool 'Enable swap support'			CONFIG_SWAP	n
	fi

endmenu

mainmenu_option next_comment
    comment 'Hardware Facilities'

    if [ "$CONFIG_ARCH_IBMPC" = "y" ]; then
	choice 'Processor'			\
	    "8086	CONFIG_CPU_8086		\
	     80186	CONFIG_CPU_80186	\
	     80286	CONFIG_CPU_80286	\
	     80386	CONFIG_CPU_80386	\
	     80486+	CONFIG_CPU_80486"		8086
    fi
    if [ "$CONFIG_ARCH_IBMPC" = "y" ]; then
	mainmenu_option next_comment
	    comment 'System Hardware'

	    bool 'System has a math coprocessor'	CONFIG_HW_FPU        y
	    bool 'System has a PS/2 pointing device'	CONFIG_HW_PS2_MOUSE  y
	    bool 'System has a VGA adapter'		CONFIG_HW_VGA        y
	endmenu
    fi

    if [ "$CONFIG_ARCH_SIBO" != "y" ]; then
	mainmenu_option next_comment
	    comment 'Block Devices'

	    bool 'System has a floppy drive'	CONFIG_HW_FLOPPY_DRIVE   y
	    bool 'System has a hard drive'	CONFIG_HW_HARD_DRIVE     y
	endmenu
    fi

#    if [ "$CONFIG_ARCH_IBMPC" = "y" ]; then
#	mainmenu_option next_comment
#	    comment 'Character Devices'
#
#	    int 'Number of valid text consoles' CONFIG_CONSOLES_MAX 3 3 15
#	endmenu
#    fi

    if [ "$CONFIG_ARCH_IBMPC" = "y" ]; then
	mainmenu_option next_comment
	    comment 'Memory Configuration'

	    int 'Base memory size (64K pages)'  	CONFIG_MEM_PAGES  8 4 10
	    if [[ "$CONFIG_CPU_8086" != "y" && "$CONFIG_CPU_80186" != "y" ]]; then
		bool 'Extended (XMS) memory support'	CONFIG_XMS	  n
		if [ "$CONFIG_XMS" = "y" ]; then
		    bool '  Use interrupt 15 for XMS size'	CONFIG_XMS_INT15  n
		    if [ "$CONFIG_XMS_INT15" != "y" ]; then
			int '  Extended memory size in kB'	CONFIG_XMS_SIZE   0
		    else
			define_int CONFIG_XMS_SIZE 0
		    fi
		else
		    define_bool CONFIG_XMS_INT15 n
		    define_int  CONFIG_XMS_SIZE  0
		fi
	    else
		define_bool CONFIG_XMS_INT15 n
		define_int  CONFIG_XMS_SIZE  0
	    fi
	endmenu
    fi

    if [ "$CONFIG_ARCH_IBMPC" = "y" ]; then
	mainmenu_option next_comment
	    comment 'BIOS Facilities'

	    bool 'System has keyboard BIOS support'		CONFIG_HW_KEYBOARD_BIOS y
	    bool 'Get fontinfo via CRT-BIOS (40h:85h)'		CONFIG_HW_VIDEO_HOC y
	    if [ "$CONFIG_HW_VIDEO_HOC" != "y" ]; then
		int 'Height of characters in lines'		CONFIG_HW_VIDEO_LINES_PER_CHARACTER 8
		int 'Lines per page'				CONFIG_HW_VIDEO_LINES_PER_SCREEN 25
	    fi

	    bool 'Use bootup IRQ-Mask of 8259 as default'	CONFIG_HW_259_USE_ORIGINAL_MASK n
	    int 'Ticks for BogoMIPS (0 = check at boottime)'	CONFIG_BOGOMIPS 0
	    bool 'Use int 13 for floppy count'			CONFIG_HW_USE_INT13_FOR_FLOPPY n
	    bool 'Use int 13 for disk parameters'		CONFIG_HW_USE_INT13_FOR_DISKPARMS y
	    bool 'Advanced Power Management support'		CONFIG_APM y
	endmenu
    fi
endmenu

if [ "$CONFIG_ROMCODE" = "y" ]; then
    mainmenu_option next_comment
	comment 'ROM-CODE kernel-loader'

	comment 'Absolute segment locations for code in target system EPROM'
	hex 'Setup code (0x60 ROM)'	CONFIG_ROM_SETUP_CODE	0xe000
	hex 'Kernel code (64k ROM)'	CONFIG_ROM_KERNEL_CODE	0xe060
	comment ''
	comment 'Absolute segment locations for data in target system RAM'
	hex 'Setup data (0x20 RAM)'	CONFIG_ROM_SETUP_DATA	0x0060
	hex 'IRQ Scheduler (0x10 RAM)'	CONFIG_ROM_IRQ_DATA	0x0080
	hex 'Kernel data (64k RAM)'	CONFIG_ROM_KERNEL_DATA	0x0090

	comment 'Information for ROM-Image generator'
	hex 'Start address of ROM (for offset in image-file)'	CONFIG_ROM_BASE 0xe000
	int 'Area with BIOS Checksum in kbytes (normally 64)'	CONFIG_ROM_CHECKSUM_SIZE 64
	bool 'Make image-file bootable by reset' 		CONFIG_ROM_BOOTABLE_BY_RESET n
	if [ "$CONFIG_ROM_BOOTABLE_BY_RESET" = "y" ]; then
	    hex 'Address jumped after reset (offset in image)'	CONFIG_ROM_RESET_ADDRESS 0x0003
	    bool 'Add startup module to image (BIOS-functions)'	CONFIG_ROM_ADD_BIOS_IMAGE n
	    if [ "$CONFIG_ROM_ADD_BIOS_IMAGE" = "y" ]; then
		string 'Name of module' 			CONFIG_ROM_BIOS_MODULE "bios/bioscode.bin"
		hex 'Module code segment address'		CONFIG_ROM_BIOS_MODULE_ADDR 0xf000
	    fi
	fi
	comment 'Generate debug code and information'
	bool 'ROM-CODE debug information'			CONFIG_ROM_DEBUG
    endmenu

    mainmenu_option next_comment
	comment 'EPROM Simulator'

	bool 'Use EPROM Simulator after make'			CONFIG_ROM_USE_SIMULATOR n
	if [ "$CONFIG_ROM_USE_SIMULATOR" = "y" ]; then
	    string 'Program call'				CONFIG_ROM_SIMULATOR_PROGRAM "/usr/bin/simu -t18 Image"
	fi
    endmenu
fi

if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
    mainmenu_option next_comment
	comment '286 Protected Mode Support'

	bool '286 protected mode support'	CONFIG_286PMODE 	n
	if [ "$CONFIG_286PMODE" = "y" ]; then
	    bool 'Support 16M+ on 386+' 	CONFIG_386RAM		n
	fi
    endmenu
fi

mainmenu_option next_comment
    comment 'Driver Support'

    source arch/i86/drivers/block/Config.in
    source arch/i86/drivers/char/Config.in
    source fs/Config.in
    source net/Config.in
endmenu

mainmenu_option next_comment
    comment 'Kernel hacking'

    bool 'Include kernel version system call'	CONFIG_SYS_VERSION	n
    bool 'System Trace' 			CONFIG_STRACE		n
endmenu
